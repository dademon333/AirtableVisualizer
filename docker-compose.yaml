volumes:
    redis:
    frontend:
    postgres:

services:
    app:
        build: ./backend
        environment:
            POSTGRESQL_USER: $POSTGRESQL_USER
            POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
            POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE

            REDIS_HOST: $REDIS_HOST
            DOCKER_POSTGRESQL_HOST: $DOCKER_POSTGRESQL_HOST
            DEFAULT_POSTGRESQL_HOST: $DEFAULT_POSTGRESQL_HOST

            DEBUG: $DEBUG
            PYTHONUNBUFFERED: 1
            SQLALCHEMY_WARN_20: 1
        volumes:
            - frontend:/usr/src/frontend:ro
        deploy:
            replicas: $APP_REPLICAS
        depends_on:
            - postgres
            - redis
            - graph_front
            - table_front

    background_workers:
        build:
            context: ./backend
            dockerfile: background_workers.dockerfile
        environment:
            POSTGRESQL_USER: $POSTGRESQL_USER
            POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
            POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE

            REDIS_HOST: $REDIS_HOST
            DOCKER_POSTGRESQL_HOST: $DOCKER_POSTGRESQL_HOST
            DEFAULT_POSTGRESQL_HOST: $DEFAULT_POSTGRESQL_HOST

            DEBUG: $BACKGROUND_WORKERS_DEBUG
            PYTHONUNBUFFERED: 1
            SQLALCHEMY_WARN_20: 1
        volumes:
            - ~/db_backups:/var/lib/postgres_backups
        depends_on:
            - redis
            - postgres

    postgres:
        build:
            context: ./docker_files
            dockerfile: postgres.dockerfile
        ports:
            - "127.0.0.1:5432:5432"
        environment:
            POSTGRES_DB: $POSTGRESQL_DATABASE
            POSTGRES_PASSWORD: $POSTGRESQL_PASSWORD
            PGDATA: /var/lib/postgresql/data  # to not lose data on image updates
            # https://stackoverflow.com/a/62301253
        volumes:
            - postgres:/var/lib/postgresql/data

    nginx:
        image: nginx:1.21-alpine
        ports:
            - "80:80"
        volumes:
            - /var/log/nginx:/var/log/nginx
            - frontend:/usr/src/app/frontend:ro
            - ./docker_files/nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - app
            - graph_front
            - table_front

    redis:
        image: redis:7-alpine
        command: --loglevel warning
        volumes:
            - redis:/data

    graph_front:
        build:
            context: ./frontend/graph
        volumes:
            - frontend:/usr/src/app/frontend

    table_front:
        build:
            context: ./frontend/table
        volumes:
            - frontend:/usr/src/app/frontend
