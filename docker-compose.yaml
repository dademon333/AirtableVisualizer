volumes:
    postgres:
    redis:
    frontend:

services:
    app:
        build: ./backend
        environment:
            POSTGRESQL_USER: $POSTGRESQL_USER
            POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
            POSTGRESQL_HOST: $POSTGRESQL_HOST
            POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE

            REDIS_HOST: $REDIS_HOST
            DEBUG: $DEBUG
            PYTHONUNBUFFERED: 1
            SQLALCHEMY_WARN_20: 1

        volumes:
            - frontend:/usr/src/frontend/build:ro
        deploy:
            replicas: $APP_REPLICAS
        depends_on:
            - postgres
            - nginx
            - redis

    background_workers:
        build:
            context: ./backend
            dockerfile: background_workers.dockerfile
        environment:
            POSTGRESQL_USER: $POSTGRESQL_USER
            POSTGRESQL_PASSWORD: $POSTGRESQL_PASSWORD
            POSTGRESQL_HOST: $POSTGRESQL_HOST
            POSTGRESQL_DATABASE: $POSTGRESQL_DATABASE

            REDIS_HOST: $REDIS_HOST
            DEBUG: $BACKGROUND_WORKERS_DEBUG
            PYTHONUNBUFFERED: 1
            SQLALCHEMY_WARN_20: 1
        depends_on:
            - redis
            - postgres
            - frontend

    postgres:
        build:
            context: ./docker_files
            dockerfile: postgres.dockerfile
        command: -c listen_addresses='$POSTGRESQL_LISTEN_ADDRESSES'
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: $POSTGRESQL_DATABASE
            POSTGRES_PASSWORD: $POSTGRESQL_PASSWORD
        volumes:
            - postgres:/var/lib/postgres/data

    nginx:
        build:
            context: ./docker_files
            dockerfile: nginx.dockerfile
        ports:
            - "80:80"
        volumes:
            - /var/log/nginx:/var/log/nginx
            - frontend:/usr/src/app/frontend/build:ro
        depends_on:
            - frontend

    redis:
        image: redis:7-alpine
        volumes:
            - redis:/data

    frontend:
        build:
            context: ./frontend
        volumes:
            - frontend:/usr/src/app/frontend/build
